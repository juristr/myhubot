{
  "name": "Deferred",
  "version": "0.1.1",
  "description": "A port of the jQuery Deferred library to node js.",
  "keywords": [
    "promises",
    "futures",
    "deferred",
    "jQuery"
  ],
  "engines": [
    "node >= 0.2.2"
  ],
  "homepage": "http://webspinner.github.com/Deferred",
  "main": "deferred",
  "repository": {
    "type": "git",
    "url": "git://github.com/webspinner/Deferred.git"
  },
  "contributors": [
    {
      "name": "Gabriel Hernandez",
      "email": "webspinner.gabriel@gmail.com",
      "url": "https://github.com/webspinner"
    },
    {
      "name": "Ben Loveridge",
      "url": "https://github.com/bloveridge"
    },
    {
      "name": "Richard Bateman",
      "email": "taxilian@gmail.com",
      "url": "https://github.com/taxilian"
    }
  ],
  "devDependencies": {
    "vows": ">=0.4.1"
  },
  "readme": "jQuery Deferred Library for Node js.\r\n===========\r\n[website](http://webspinner.github.com/Deferred)\r\n\r\njQuery Deferred solves the following problems:\r\n\r\n* support common deferred interface in node\r\n* give some access to the deferred library underpinning in the browser\r\n\r\nUsage :\r\n\r\n```javascript\r\nvar Deferred = require('Deferred');\r\nvar when = Deferred.when;\r\n\r\nvar dfd = new Deferred() // || Deferred()\r\ndfd.done( function () {\r\n\talert(\"Deferred resolved!\");\r\n} ).fail( function () {\r\n\talert(\"Deferred rejected!\");\r\n} );\r\n\r\nsetTimeout( function(){\r\n\tdfd.resolve();\r\n}, 1500 );\r\n```\r\n\r\nSlightly more meaningful Usage Case :\r\n\r\n```javascript\r\nvar fs = require('fs');\r\n\r\nfunction readFile(fileName){\r\n\tvar hasReadFile = new Deferred();\r\n\tfs.readFile(fileName, 'utf8',function(err, contents){\r\n\t\tif ( err !== null ) {\r\n\t\t\treturn hasReadFile.reject(err);\r\n\t\t}\r\n\t\treturn hasReadFile.resolve(contents);\r\n\t});\r\n\treturn hasReadFile.promise();\r\n}\r\n\r\nfunction parseFile(fileName, parser){\r\n\t// parser implemented elsewhere\r\n\treadFile(fileName)\r\n\t\t.done(parser.parse)\r\n\t\t.fail(function(err){\r\n\t\t\tconsole.error('readFile :: ', err);\r\n\t\t});\r\n}\r\n```\r\n\r\n**What are Deferreds?**\r\n\r\nI am putting together a small list of articles worth reading about the concept of deferreds, futures and promises. In it's simplest form a deferred object is a way to introduce a callback stack to a function.\r\n\r\n[ColonelPanic](http://colonelpanic.net/2011/11/jquery-deferred-objects/)\r\n",
  "_id": "Deferred@0.1.1",
  "_from": "Deferred@0.1.1"
}
